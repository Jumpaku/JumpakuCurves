
buildscript {
    ext.kotlin_version = '1.2.50'
    ext.jvm_version = '1.8'
    ext.dependencyVersions = [
            'junit4': '4.12',
            'junit5': '5.1.0',
            'kluent': '1.38',
            'commons_math3': '3.6.1',
            'kotson': '2.5.0',
            'vavr': '0.9.1',
            'tornadofx': '1.7.12'
    ]
}

plugins {
    id 'java'
    id 'maven'
    id 'org.jetbrains.kotlin.jvm' version '1.2.50'
}

subprojects {

    group 'jumpaku'
    version '0.10.1'

    apply plugin: 'kotlin'
    apply plugin: 'maven'

    repositories {
        mavenCentral()
        jcenter()
    }

    compileKotlin {
        kotlinOptions.jvmTarget = jvm_version
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = jvm_version
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

        compile "org.apache.commons:commons-math3:${dependencyVersions.commons_math3}"
        compile "com.github.salomonbrys.kotson:kotson:${dependencyVersions.kotson}"
        compile "io.vavr:vavr:${dependencyVersions.vavr}"
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
    artifacts {
        archives sourcesJar
        archives javadocJar
    }
}

// settings of sub projects

project(':core') {
}

project(':core-test') {
    dependencies {
        testCompileOnly "junit:junit:${dependencyVersions.junit4}"
        testImplementation "org.junit.jupiter:junit-jupiter-api:${dependencyVersions.junit5}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${dependencyVersions.junit5}"
        testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${dependencyVersions.junit5}"

        compile "org.amshove.kluent:kluent:${dependencyVersions.kluent}"
        compile project(':core')
    }
    test {
        useJUnitPlatform()
    }
}

project(':fsc') {
    dependencies {
        compile project(':core')
    }
}

project(':fsc-test') {
    dependencies {
        testCompileOnly "junit:junit:${dependencyVersions.junit4}"
        testImplementation "org.junit.jupiter:junit-jupiter-api:${dependencyVersions.junit5}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${dependencyVersions.junit5}"
        testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${dependencyVersions.junit5}"

        compile "org.amshove.kluent:kluent:${dependencyVersions.kluent}"
        compile project(':fsc')
        compile project(':core-test')
    }
    test {
        useJUnitPlatform()
    }
}

project(':fxcomponents') {
    dependencies {
        compile project(':core')
        compile project(':fsc')
        compile "no.tornado:tornadofx:${dependencyVersions.tornadofx}"
    }
}

project(':examples'){
    dependencies {
        compile project(':core')
        compile project(':fsc')
        compile project(':fxcomponents')
        compile "no.tornado:tornadofx:${dependencyVersions.tornadofx}"
    }
}
